{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.10.13", "generated_at": "2025-10-22T06:54:32.389552Z", "invocation_id": "ddf2b3e1-9b51-4311-b03f-7b8449e31659", "invocation_started_at": "2025-10-22T06:54:30.398046Z", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-22T06:54:31.343479Z", "completed_at": "2025-10-22T06:54:31.343480Z"}, {"name": "execute", "started_at": "2025-10-22T06:54:31.351023Z", "completed_at": "2025-10-22T06:54:31.692620Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.36237287521362305, "adapter_response": {"_message": "INSERT 200", "code": "INSERT", "rows_affected": 200}, "message": "INSERT 200", "failures": null, "unique_id": "seed.sumup.device", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-22T06:54:31.343252Z", "completed_at": "2025-10-22T06:54:31.343254Z"}, {"name": "execute", "started_at": "2025-10-22T06:54:31.343585Z", "completed_at": "2025-10-22T06:54:31.737452Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.4513399600982666, "adapter_response": {"_message": "INSERT 100", "code": "INSERT", "rows_affected": 100}, "message": "INSERT 100", "failures": null, "unique_id": "seed.sumup.store", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-22T06:54:31.813110Z", "completed_at": "2025-10-22T06:54:31.881134Z"}, {"name": "execute", "started_at": "2025-10-22T06:54:31.899925Z", "completed_at": "2025-10-22T06:54:31.998410Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.24163603782653809, "adapter_response": {"_message": "SELECT 5", "code": "SELECT", "rows_affected": 5, "query_id": null}, "message": null, "failures": null, "unique_id": "model.sumup.stg_device", "compiled": true, "compiled_code": "\n  \n  \n\nSELECT\n    -- Primary Key\n    id AS device_id,\n\n    -- Foreign Key to stores (assuming this links the device to a specific store)\n    store_id,\n\n    -- Descriptive Attributes\n    type as device_type\n    \n    -- Other fields, if any, standardized here\n    -- e.g., CAST(status AS VARCHAR) AS device_status\n\n    -- Add a load timestamp/date if available in the raw data or ingestion process\n    -- '2025-10-22 06:54:30.398165+00:00'::TIMESTAMP_NTZ AS dbt_loaded_at\n\nFROM \"postgres\".\"analytics\".\"device\"\n  \n  limit 5\n", "relation_name": "\"postgres\".\"analytics_staging\".\"stg_device\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-22T06:54:31.918680Z", "completed_at": "2025-10-22T06:54:31.985528Z"}, {"name": "execute", "started_at": "2025-10-22T06:54:32.010573Z", "completed_at": "2025-10-22T06:54:32.097274Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.22849702835083008, "adapter_response": {"_message": "SELECT 5", "code": "SELECT", "rows_affected": 5, "query_id": null}, "message": null, "failures": null, "unique_id": "model.sumup.stg_store", "compiled": true, "compiled_code": "\n  \n  \n\nSELECT\n    -- Primary Key: Rename to be explicit\n    id AS store_id,\n    name AS store_name,\n\n    -- Descriptive Attributes: Rename 'typology' for clarity\n    typology AS store_typology,\n    country,\n    city\n    \n    -- Add a load timestamp/date if available in the raw data or ingestion process\n    -- '2025-10-22 06:54:30.398165+00:00'::TIMESTAMP_NTZ AS dbt_loaded_at\n\nFROM \"postgres\".\"analytics\".\"store\"\n  \n  limit 5\n", "relation_name": "\"postgres\".\"analytics_staging\".\"stg_store\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-22T06:54:31.343367Z", "completed_at": "2025-10-22T06:54:31.343368Z"}, {"name": "execute", "started_at": "2025-10-22T06:54:31.349813Z", "completed_at": "2025-10-22T06:54:32.345636Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 1.003141164779663, "adapter_response": {"_message": "INSERT 1500", "code": "INSERT", "rows_affected": 1500}, "message": "INSERT 1500", "failures": null, "unique_id": "seed.sumup.transaction", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-22T06:54:32.346991Z", "completed_at": "2025-10-22T06:54:32.348306Z"}, {"name": "execute", "started_at": "2025-10-22T06:54:32.348439Z", "completed_at": "2025-10-22T06:54:32.356157Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.009745121002197266, "adapter_response": {"_message": "SELECT 5", "code": "SELECT", "rows_affected": 5, "query_id": null}, "message": null, "failures": null, "unique_id": "model.sumup.stg_transaction", "compiled": true, "compiled_code": "\n  \n  SELECT\n    -- Primary and Foreign Keys\n    CAST(id AS INTEGER) AS transaction_id,\n    CAST(device_id AS INTEGER) AS device_id,\n\n    -- Product Information\n   \n    MD5(CONCAT(TRIM(LOWER(product_name)), '|' ,TRIM(LOWER(product_sku)))::BYTEA ) AS product_id,\n    product_name,\n    product_sku, \n    category_name,\n\n    -- Financial Data & Status\n    -- Convert amount from cents (as typically stored for high precision) to Euros (\u20ac)\n    CAST(amount AS NUMERIC) AS amount_eur,\n    LOWER(status) AS status,\n\n    -- Card Information \n    REPLACE(REPLACE(CAST(card_number AS VARCHAR), ' ', ''), '-', '') AS card_number,\n    CAST(cvv AS VARCHAR) AS cvv,\n    \n    -- Date/Time Fields\n    -- The original columns contained mixed date formats, ensuring they are cast to timestamps\n    CAST(created_at AS TIMESTAMP) AS created_at_utc,\n    CAST(happened_at AS TIMESTAMP) AS happened_at_utc\n\nFROM \"postgres\".\"analytics\".\"transaction\"\n  \n  limit 5\n", "relation_name": "\"postgres\".\"analytics_staging\".\"stg_transaction\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-22T06:54:32.358348Z", "completed_at": "2025-10-22T06:54:32.367073Z"}, {"name": "execute", "started_at": "2025-10-22T06:54:32.367209Z", "completed_at": "2025-10-22T06:54:32.375037Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01799798011779785, "adapter_response": {"_message": "SELECT 0", "code": "SELECT", "rows_affected": 0, "query_id": null}, "message": null, "failures": null, "unique_id": "test.sumup.not_null_stg_transaction_card_number.fb1135c280", "compiled": true, "compiled_code": "\n  \n  \n    \n    \n\n\n\nselect card_number\nfrom \"postgres\".\"analytics_staging\".\"stg_transaction\"\nwhere card_number is null\n\n\n\n  \n  limit 5\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-22T06:54:32.362384Z", "completed_at": "2025-10-22T06:54:32.368910Z"}, {"name": "execute", "started_at": "2025-10-22T06:54:32.369060Z", "completed_at": "2025-10-22T06:54:32.379712Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022692203521728516, "adapter_response": {"_message": "SELECT 5", "code": "SELECT", "rows_affected": 5, "query_id": null}, "message": null, "failures": null, "unique_id": "test.sumup.dbt_expectations_expect_column_value_lengths_to_be_between_stg_transaction_card_number__25__13.0fb060c9f3", "compiled": true, "compiled_code": "\n  \n  \n\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and length(\n        card_number\n    ) >= 13 and length(\n        card_number\n    ) <= 25\n)\n as expression\n\n\n    from \"postgres\".\"analytics_staging\".\"stg_transaction\"\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n\n\n  \n  limit 5\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-22T06:54:32.364009Z", "completed_at": "2025-10-22T06:54:32.370632Z"}, {"name": "execute", "started_at": "2025-10-22T06:54:32.372194Z", "completed_at": "2025-10-22T06:54:32.380156Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02267599105834961, "adapter_response": {"_message": "SELECT 0", "code": "SELECT", "rows_affected": 0, "query_id": null}, "message": null, "failures": null, "unique_id": "test.sumup.not_null_stg_transaction_amount_eur.f90ffbc411", "compiled": true, "compiled_code": "\n  \n  \n    \n    \n\n\n\nselect amount_eur\nfrom \"postgres\".\"analytics_staging\".\"stg_transaction\"\nwhere amount_eur is null\n\n\n\n  \n  limit 5\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-22T06:54:32.365599Z", "completed_at": "2025-10-22T06:54:32.370329Z"}, {"name": "execute", "started_at": "2025-10-22T06:54:32.370763Z", "completed_at": "2025-10-22T06:54:32.381289Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023373126983642578, "adapter_response": {"_message": "SELECT 0", "code": "SELECT", "rows_affected": 0, "query_id": null}, "message": null, "failures": null, "unique_id": "model.sumup.int_transaction", "compiled": true, "compiled_code": "\n  \n  \n\nSELECT\n    -- Primary and Foreign Keys\n    transaction_id,\n    t.device_id,\n\n    -- Product Information\n   \n    CONCAT(TRIM(LOWER(product_name)), '|' ,TRIM(LOWER(product_sku)))::BYTEA  AS product_id,\n    product_name,\n    product_sku, \n    category_name,\n\n    -- Financial Data and Status\n    amount_eur,\n    status,\n\n    --device data\n    d.device_type,\n    \n    -- store_data\n    d.store_id,\n    store_name,\n    store_typology,\n\n    -- Card Information \n    MD5( REPLACE(REPLACE(CAST(card_number AS VARCHAR), ' ', ''), '-', '')) AS card_number_hashed,\n    MD5( CAST(cvv AS VARCHAR)) AS cvv_hashed,\n    \n    -- Date/Time Fields\n    created_at_utc,\n    happened_at_utc\n\nFROM \"postgres\".\"analytics_staging\".\"stg_transaction\" t\nLEFT JOIN \"postgres\".\"analytics_staging\".\"stg_device\" d ON t.device_id = d.device_id\nLEFT JOIN \"postgres\".\"analytics_staging\".\"stg_store\" s ON d.store_id = s.store_id\n\n-- Incremental Logic: Only select new records for subsequent runs\n\n    WHERE t.created_at_utc > (SELECT MAX(created_at_utc) FROM \"postgres\".\"analytics_analytics\".\"int_transaction\")\n\n  \n  limit 5\n", "relation_name": "\"postgres\".\"analytics_analytics\".\"int_transaction\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-22T06:54:32.375801Z", "completed_at": "2025-10-22T06:54:32.377492Z"}, {"name": "execute", "started_at": "2025-10-22T06:54:32.377617Z", "completed_at": "2025-10-22T06:54:32.385110Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.009720802307128906, "adapter_response": {"_message": "SELECT 0", "code": "SELECT", "rows_affected": 0, "query_id": null}, "message": null, "failures": null, "unique_id": "test.sumup.stg_transaction__amount_eur_is_positive.7336890e7d", "compiled": true, "compiled_code": "\n  \n  \n\n    \n    with grouped_expression as (\n    select\n        \n        \n    \n  amount_eur > 0 as expression\n\n\n    from \"postgres\".\"analytics_staging\".\"stg_transaction\"\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n  \n  limit 5\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-22T06:54:32.382050Z", "completed_at": "2025-10-22T06:54:32.383176Z"}, {"name": "execute", "started_at": "2025-10-22T06:54:32.383310Z", "completed_at": "2025-10-22T06:54:32.388439Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006790876388549805, "adapter_response": {"_message": "SELECT 5", "code": "SELECT", "rows_affected": 5, "query_id": null}, "message": null, "failures": null, "unique_id": "model.sumup.customer_store_ranking", "compiled": true, "compiled_code": "\n  \n  --Question 1) \n\nSELECT\n    store_name,\n    --SUM(amount_eur) AS total_amount\n    amount_eur\nFROM\n    \"postgres\".\"analytics_analytics\".\"int_transaction\" \nWHERE status = 'accepted' and store_id = 3\n\n\n\n--GROUP BY\n\n--    store_name\n--ORDER BY\n--    total_amount DESC\n--limit 10\n  \n  limit 5\n", "relation_name": "\"postgres\".\"analytics_analytics\".\"customer_store_ranking\"", "batch_results": null}], "elapsed_time": 1.109870195388794, "args": {"state_modified_compare_vars": false, "static_parser": true, "use_colors": true, "invocation_command": "dbt show --no-partial-parse --select +customer_store_ranking", "require_resource_names_without_spaces": true, "strict_mode": false, "log_level": "info", "cache_selected_only": false, "require_generic_test_arguments_property": true, "show_resource_report": false, "use_colors_file": true, "state_modified_compare_more_unrendered_values": false, "which": "show", "limit": 5, "write_json": true, "source_freshness_run_project_hooks": true, "project_dir": "/Users/andre/Desktop/sumup/sumup", "select": ["+customer_store_ranking"], "send_anonymous_usage_stats": true, "log_format": "default", "defer": false, "printer_width": 80, "output": "text", "exclude": [], "profiles_dir": "/Users/andre/Desktop/sumup/sumup", "show_all_deprecations": false, "introspect": true, "require_yaml_configuration_for_mf_time_spines": false, "log_file_max_bytes": 10485760, "quiet": false, "require_nested_cumulative_type_params": false, "partial_parse": false, "require_explicit_package_overrides_for_builtin_materializations": true, "log_format_file": "debug", "populate_cache": true, "log_path": "/Users/andre/Desktop/sumup/sumup/logs", "indirect_selection": "eager", "require_all_warnings_handled_by_warn_error": false, "require_batched_execution_for_custom_microbatch_strategy": false, "vars": {}, "print": true, "log_level_file": "debug", "partial_parse_file_diff": true, "skip_nodes_if_on_run_start_fails": false, "macro_debugging": false, "version_check": true, "warn_error_options": {"error": [], "warn": [], "silence": []}, "use_fast_test_edges": false, "upload_to_artifacts_ingest_api": false, "validate_macro_args": false, "favor_state": false}}